{"version":3,"sources":["webpack:///./src/client/$_lazy_route_resource lazy namespace object","webpack:///./src/client/app/about-me/about-me.component.css","webpack:///./src/client/app/about-me/about-me.component.html","webpack:///./src/client/app/about-me/about-me.component.ts","webpack:///./src/client/app/app.component.css","webpack:///./src/client/app/app.component.html","webpack:///./src/client/app/app.component.ts","webpack:///./src/client/app/app.module.ts","webpack:///./src/client/app/input-form/input-form.component.css","webpack:///./src/client/app/input-form/input-form.component.html","webpack:///./src/client/app/input-form/input-form.component.ts","webpack:///./src/client/app/navigation/navigation.component.css","webpack:///./src/client/app/navigation/navigation.component.html","webpack:///./src/client/app/navigation/navigation.component.ts","webpack:///./src/client/app/other-info/other-info.component.css","webpack:///./src/client/app/other-info/other-info.component.html","webpack:///./src/client/app/other-info/other-info.component.ts","webpack:///./src/client/app/projects/projects.component.css","webpack:///./src/client/app/projects/projects.component.html","webpack:///./src/client/app/projects/projects.component.ts","webpack:///./src/client/app/services/input-form.service.ts","webpack:///./src/client/app/services/login.service.ts","webpack:///./src/client/environments/environment.ts","webpack:///./src/client/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/client/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class='container-fluid'>\\n  <ul class='list-group-flush'>\\n    <li class='list-group-item'>\\n      <h4>Infosys Ltd</h4>\\n      <h6 class='mt-1'>Software Developer contracted to AT&T</h6>\\n    </li>\\n    <li class='list-group-item'>\\n      <h4>Revature</h4>\\n      <h6>Software Developer</h6>\\n    </li>\\n    <li class='list-group-item'>\\n      <h4>Walkabout Outdoors</h4>\\n      <h6>Landscaper</h6>\\n    </li>\\n    <li class='list-group-item'>\\n      <h4>FedEx Express</h4>\\n      <h6>Material Handler</h6>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.css']\n})\nexport class AboutMeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<html>\\n<head>\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n</head>\\n<body>\\n  <app-navigation></app-navigation>\\n  <router-outlet></router-outlet>\\n</body>\\n</html>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sample-proj';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { InputFormComponent } from './input-form/input-form.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { AboutMeComponent } from './about-me/about-me.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { OtherInfoComponent } from './other-info/other-info.component';\n\nimport { InputFormService } from './services/input-form.service';\nimport { LoginService } from './services/login.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputFormComponent,\n    NavigationComponent,\n    AboutMeComponent,\n    ProjectsComponent,\n    OtherInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: InputFormComponent },\n      { path: 'about', component: AboutMeComponent },\n      { path: 'projects', component: ProjectsComponent },\n      { path: 'other', component: OtherInfoComponent }\n    ])\n  ],\n  providers: [\n    InputFormService,\n    LoginService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class='container-fluid mt-2'>\\r\\n  <div class='row'>\\r\\n    <div class='col-3'>\\r\\n      <form>\\r\\n        <div class='form-group'>\\r\\n          <label for='name'>Insert new user</label>\\r\\n          <input type='text' id='name' name='name' placeholder='Name' class='form-control' [(ngModel)]='user.username'>\\r\\n        </div>\\r\\n        <div class='form-group'>\\r\\n          <input type='number' id='id' name='id' placeholder='ID' class='form-control' [(ngModel)]='user.id'>\\r\\n        </div>\\r\\n        <button type='submit' class='btn btn-primary' (click)='storeUser()'>Save</button>\\r\\n        <div class='form-group mt-4'>\\r\\n          <label for='getUserById'>Retrieve user by ID</label>\\r\\n          <input type='number' id='getUserById' name='getUserById' placeholder='User ID' class='form-control' [(ngModel)]='userIdSearch'>\\r\\n        </div>\\r\\n        <button type='submit' class='btn btn-primary' (click)='searchUserById()'>Search</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { InputFormService } from '../services/input-form.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './input-form.component.html',\n  styleUrls: ['./input-form.component.css']\n})\nexport class InputFormComponent implements OnInit {\n\n  constructor(private inputFormService: InputFormService) { }\n\n  user: User = {};\n\n  storeUser() {\n    console.log(this.user);\n    this.inputFormService.storeUser(this.user).subscribe(\n        user => {\n            console.log('Successfully saved user ' + user.id + ' to database');\n        }\n    );\n  }\n\n  searchId: number;\n  searchUserById() {\n    this.inputFormService.searchUserById(this.searchId).subscribe(\n      user => {\n        console.log(user);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".currentlyActiveLink{\\r\\n  color:white;\\r\\n}\\r\\n\"","module.exports = \"<nav class='navbar navbar-light bg-light justify-content-between bg-dark'>\\n  <div>\\n    <ul class='navbar-nav navbar-expand nav-pill mr-auto'>\\n      <a routerLink='/' routerLinkActive='currentlyActiveLink' class='text-secondary'><li class='nav-item mr-sm-2'>Home</li></a>\\n      <a routerLink='/about' routerLinkActive='currentlyActiveLink' class='text-secondary'><li class='nav-item mx-sm-2'>About</li></a>\\n      <a routerLink='/projects' routerLinkActive='currentlyActiveLink' class='text-secondary'><li class='nav-item mx-sm-2'>Projects</li></a>\\n      <a routerLink='/other' routerLinkActive='currentlyActiveLink' class='text-secondary'><li class='nav-item mx-sm-2'>Other</li></a>\\n    </ul>\\n  </div>\\n  <div>\\n    <form class='form-inline'>\\n      <input class='form-control mr-sm-2' type='text' placeholder='Username' aria-label='username' name='username' [(ngModel)]='user.username'>\\n      <input class='form-control mr-sm-2' type='password' placeholder='Password' aria-label='password' name='password' [(ngModel)]='user.password'>\\n      <button class='btn btn-outline-primary mr-sm-2' type='button' (click)='login()'>Login</button>\\n      <button class='btn btn-outline-secondary mr-sm-2' type='button' (click)='register()'>Register</button>\\n    </form>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\n\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(private loginService: LoginService) { }\n\n  private user: User = {};\n\n  login() {\n    this.loginService.login(this.user).subscribe(\n      user => {\n        console.log(user);\n      });\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  other-info works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-other-info',\n  templateUrl: './other-info.component.html',\n  styleUrls: ['./other-info.component.css']\n})\nexport class OtherInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  projects works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputFormService {\n\n  storeUser (user: User): Observable<User> {\n    console.log('inside storeUser');\n    return this.http.post<User>('http://localhost:3000/api/storeUser', user);\n  }\n\n  searchUserById(userId: number): Observable<User> {\n    console.log('inside searchUser');\n    return this.http.get<User>('http://localhost:3000/api/user/' + userId);\n  }\n\n\n  constructor(private http: HttpClient) { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  login (user: User): Observable<User>{\n    console.log('inside login');\n    return this.http.post<User>('http://localhost:3000/api/login', user);\n  }\n\n  register (user: User): Observable<User> {\n    console.log('inside register');\n    return this.http.post<User>('http://localhost:3000/api/register', user);\n  }\n\n  constructor(private http: HttpClient) { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}